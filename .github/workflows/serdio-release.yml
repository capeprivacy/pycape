name: Serdio Release

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install pypa/build
      run: pip install build --user
    - name: Build wheel for serdio
      run: python -m build --outdir dist serdio
    - name: Install wheel & test installation
      run: |
        pip install $(find dist -name "*.whl")
        python -c "import serdio; print(serdio.__version__)"
    - name: Test wheel
      run: |
        pip install pytest absl-py
        pytest serdio
    - name: Upload wheels
      uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: dist
  
  release-notes:
    permissions:
      contents: write
      pull-requests: read
    runs-on: ubuntu-latest
    steps:
    - name: Release drafter
      id: release_drafter
      uses: release-drafter/release-drafter@v5
      with:
        disable-autolabeler: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    outputs:
      upload_url: ${{ steps.release_drafter.outputs.upload_url }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ build, release-notes ]
    steps:
      - uses: actions/download-artifact@v2
        id: download
        with:
          name: wheels
      - name: Fetch wheel name
        run: |
          export SERDIO_WHEEL_PATH=`find ${{ steps.download.outputs.download-path }} -name "*.whl"`
          export SERDIO_WHEEL_NAME=`basename $SERDIO_WHEEL_PATH`
          echo "wheel_path=$SERDIO_WHEEL_PATH" >> $GITHUB_ENV
          echo "wheel_name=$SERDIO_WHEEL_NAME" >> $GITHUB_ENV
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.release-notes.outputs.upload_url }}
          asset_path: ${{ env.wheel_path }}
          asset_name: ${{ env.wheel_name }}
          asset_content_type: application/zip
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN_SERDIO }}
        run: |
          pip install --upgrade twine
          twine upload --skip-existing *
        working-directory: ${{ steps.download.outputs.download-path }}